{
  "Solver": "clingo version 5.7.1",
  "Input": [
    "encodings/order_test.lp","generated_benchmarks/dense_few/instances/instance_14.lp"
  ],
  "Call": [
    {
      "Witnesses": [
        {
          "Value": [
            "move(3,((27,3),0),((26,3),3))", "move(3,((27,4),1),((27,3),0))", "move(3,((26,4),0),((27,4),1))", "move(2,((3,10),3),((3,9),0))", "move(3,((3,10),3),((3,9),0))", "move(2,((4,10),1),((4,9),0))", "move(0,((14,10),3),((14,9),0))", "move(2,((14,10),3),((14,9),0))", "move(0,((3,9),1),((3,10),2))", "move(2,((3,9),1),((3,10),2))", "move(0,((4,10),2),((3,10),3))", "move(2,((4,10),2),((3,10),3))", "move(3,((4,10),3),((3,10),3))", "move(0,((3,10),2),((4,10),1))", "move(2,((3,10),2),((4,10),1))", "move(3,((3,10),1),((4,10),1))", "move(0,((4,9),3),((4,10),2))", "move(2,((4,9),3),((4,10),2))", "move(2,((14,9),1),((14,10),2))", "move(0,((15,10),3),((14,10),3))", "move(2,((15,10),3),((14,10),3))", "move(3,((15,10),2),((14,10),3))", "move(0,((14,10),1),((15,10),1))", "move(2,((14,10),2),((15,10),1))", "move(3,((14,10),1),((15,10),1))", "move(3,((15,9),3),((15,10),2))", "move(3,((27,14),0),((26,14),3))", "move(3,((27,15),1),((27,14),0))", "move(2,((26,14),2),((27,14),1))", "move(2,((27,15),2),((26,15),3))", "move(3,((26,15),0),((27,15),1))", "move(2,((27,14),1),((27,15),2))", "move(0,((16,18),1),((16,17),0))", "move(0,((16,17),3),((16,18),2))", "move(2,((10,20),2),((11,20),1))", "move(3,((9,23),1),((9,22),0))", "move(3,((9,22),2),((9,23),2))", "move(3,((30,27),3),((30,26),0))", "move(3,((34,25),2),((34,26),2))", "move(0,((22,26),3),((22,27),2))", "move(3,((22,26),3),((22,27),2))", "move(3,((34,26),2),((34,27),2))", "move(1,((17,29),0),((17,28),0))", "move(2,((17,29),0),((17,28),0))", "move(2,((20,27),1),((20,28),2))", "move(3,((9,30),3),((9,29),0))", "move(0,((17,28),2),((17,29),2))", "move(3,((17,28),2),((17,29),2))", "move(2,((22,28),1),((22,29),2))", "move(1,((9,29),1),((9,30),2))", "move(3,((10,30),0),((9,30),3))", "move(1,((9,30),2),((10,30),1))", "move(2,((11,32),2),((10,32),3))", "move(0,((10,32),0),((11,32),1))", "move(0,((11,34),3),((10,34),3))", "move(3,((11,34),3),((10,34),3))", "move(1,((10,34),2),((11,34),1))", "move(2,((10,34),2),((11,34),1))", "move(3,((26,3),3),((26,1),0))", "move(3,((17,9),3),((15,9),3))", "move(3,((1,10),0),((3,10),1))", "move(0,((3,10),3),((1,10),3))", "move(0,((15,10),1),((17,10),1))", "move(2,((15,10),1),((17,10),1))", "move(3,((15,10),1),((17,10),1))", "move(0,((17,10),0),((15,10),3))", "move(2,((17,10),3),((15,10),3))", "move(3,((26,17),1),((26,15),0))", "move(2,((26,15),3),((26,17),2))", "move(0,((11,20),0),((11,18),0))", "move(0,((11,18),3),((11,20),2))", "move(0,((11,22),3),((11,20),0))", "move(0,((11,20),2),((11,22),2))", "move(2,((11,20),1),((11,22),2))", "move(0,((12,23),3),((11,22),3))", "move(2,((11,22),2),((12,23),2))", "move(1,((20,27),1),((22,27),1))", "move(0,((22,27),2),((20,27),3))", "move(3,((22,27),2),((20,27),3))", "move(3,((32,27),3),((30,27),3))", "move(3,((34,27),2),((32,27),3))", "move(2,((20,28),2),((22,28),1))", "move(0,((11,30),0),((12,29),0))", "move(2,((12,29),3),((11,30),3))", "move(3,((10,32),0),((10,30),0))", "move(1,((10,30),1),((10,32),2))", "move(0,((11,32),1),((11,30),0))", "move(2,((11,30),3),((11,32),2))", "move(0,((10,34),3),((10,32),0))", "move(3,((10,34),3),((10,32),0))", "move(1,((10,32),2),((10,34),2))", "move(2,((10,32),3),((10,34),2))", "move(3,((9,23),2),((9,26),2))", "move(2,((3,9),0),((1,10),2))", "move(3,((3,9),0),((1,10),2))", "move(0,((1,10),0),((3,9),1))", "move(2,((1,10),0),((3,9),1))", "move(3,((26,7),0),((26,4),0))", "move(3,((9,18),2),((9,22),2))", "move(3,((9,22),0),((9,18),0))", "move(0,((11,22),2),((11,26),2))", "move(3,((8,26),0),((9,23),1))", "move(0,((26,26),3),((22,26),3))", "move(3,((26,26),3),((22,26),3))", "move(3,((30,26),0),((26,26),3))", "move(1,((8,26),2),((9,29),1))", "move(1,((17,28),0),((20,27),1))", "move(2,((17,28),0),((20,27),1))", "move(0,((20,27),3),((17,28),2))", "move(3,((20,27),3),((17,28),2))", "move(1,((22,27),1),((26,27),1))", "move(3,((9,29),0),((8,26),0))", "move(2,((22,29),2),((26,29),1))", "move(1,((17,34),1),((17,29),0))", "move(2,((17,34),1),((17,29),0))", "move(0,((17,29),2),((17,34),2))", "move(3,((17,29),2),((17,34),2))", "move(0,((16,18),2),((11,18),3))", "move(0,((11,18),0),((16,18),1))", "move(1,((11,34),1),((17,34),1))", "move(2,((11,34),1),((17,34),1))", "move(0,((17,34),2),((11,34),3))", "move(3,((17,34),2),((11,34),3))", "move(0,((1,17),3),((1,10),0))", "move(2,((1,17),0),((1,10),0))", "move(3,((1,17),3),((1,10),0))", "move(3,((26,14),3),((26,7),0))", "move(0,((1,10),3),((1,17),2))", "move(2,((1,10),2),((1,17),2))", "move(3,((1,10),2),((1,17),2))", "move(2,((26,7),2),((26,14),2))", "move(3,((26,1),0),((18,1),3))", "move(0,((17,10),1),((16,17),3))", "move(2,((17,10),1),((16,17),3))", "move(0,((16,17),0),((17,10),0))", "move(2,((12,23),2),((12,29),3))", "move(0,((12,29),0),((12,23),3))", "move(2,((9,18),2),((1,17),0))", "move(0,((1,17),2),((9,18),1))", "move(2,((16,17),3),((10,20),2))", "move(0,((9,18),1),((1,17),3))", "move(3,((9,18),0),((1,17),3))", "move(2,((1,17),2),((9,18),2))", "move(3,((1,17),2),((9,18),2))", "move(3,((18,1),3),((17,9),3))", "move(2,((4,9),0),((14,9),1))", "move(0,((14,9),0),((4,9),3))", "move(2,((14,9),0),((4,9),3))", "move(0,((4,10),1),((14,10),1))", "move(3,((4,10),1),((14,10),1))", "move(3,((14,10),3),((4,10),3))", "move(3,((17,10),1),((26,17),1))", "move(2,((26,17),2),((17,10),3))", "resolve(0,3,(26,26))", "resolve(1,3,(8,26))", "resolve(2,3,(26,7))", "resolve(2,0,(3,9))", "resolve(0,3,(3,9))", "resolve(2,3,(3,9))", "resolve(2,0,(4,9))", "resolve(2,0,(14,9))", "resolve(2,0,(3,10))", "resolve(0,3,(3,10))", "resolve(2,3,(3,10))", "resolve(2,0,(4,10))", "resolve(0,3,(4,10))", "resolve(2,3,(4,10))", "resolve(2,0,(14,10))", "resolve(0,3,(14,10))", "resolve(2,3,(14,10))", "resolve(2,0,(15,10))", "resolve(0,3,(15,10))", "resolve(2,3,(15,10))", "resolve(2,3,(26,14))", "resolve(2,3,(27,14))", "resolve(2,3,(26,15))", "resolve(2,3,(27,15))", "resolve(2,0,(16,17))", "resolve(2,3,(26,17))", "resolve(2,0,(11,20))", "resolve(0,3,(22,26))", "resolve(1,0,(20,27))", "resolve(2,0,(20,27))", "resolve(1,2,(20,27))", "resolve(0,3,(20,27))", "resolve(1,3,(20,27))", "resolve(2,3,(20,27))", "resolve(1,0,(22,27))", "resolve(0,3,(22,27))", "resolve(1,3,(22,27))", "resolve(1,0,(17,28))", "resolve(2,0,(17,28))", "resolve(1,2,(17,28))", "resolve(0,3,(17,28))", "resolve(1,3,(17,28))", "resolve(2,3,(17,28))", "resolve(1,3,(9,29))", "resolve(1,0,(17,29))", "resolve(2,0,(17,29))", "resolve(1,2,(17,29))", "resolve(0,3,(17,29))", "resolve(1,3,(17,29))", "resolve(2,3,(17,29))", "resolve(1,3,(9,30))", "resolve(1,3,(10,30))", "resolve(1,0,(10,32))", "resolve(2,0,(10,32))", "resolve(1,2,(10,32))", "resolve(0,3,(10,32))", "resolve(1,3,(10,32))", "resolve(2,3,(10,32))", "resolve(2,0,(11,32))", "resolve(1,0,(10,34))", "resolve(2,0,(10,34))", "resolve(1,2,(10,34))", "resolve(0,3,(10,34))", "resolve(1,3,(10,34))", "resolve(2,3,(10,34))", "resolve(1,0,(11,34))", "resolve(2,0,(11,34))", "resolve(1,2,(11,34))", "resolve(0,3,(11,34))", "resolve(1,3,(11,34))", "resolve(2,3,(11,34))", "resolve(2,0,(1,10))", "resolve(0,3,(1,10))", "resolve(2,3,(1,10))", "resolve(2,0,(17,10))", "resolve(0,3,(17,10))", "resolve(2,3,(17,10))", "resolve(2,0,(9,18))", "resolve(0,3,(9,18))", "resolve(2,3,(9,18))", "resolve(2,0,(11,22))", "resolve(2,0,(12,23))", "resolve(2,0,(12,29))", "resolve(2,0,(11,30))", "resolve(1,0,(17,34))", "resolve(2,0,(17,34))", "resolve(1,2,(17,34))", "resolve(0,3,(17,34))", "resolve(1,3,(17,34))", "resolve(2,3,(17,34))", "resolve(2,0,(1,17))", "resolve(0,3,(1,17))", "resolve(2,3,(1,17))"
          ]
        }
      ]
    }
  ],
  "Result": "SATISFIABLE",
  "Models": {
    "Number": 1,
    "More": "yes"
  },
  "Calls": 1,
  "Time": {
    "Total": 0.328,
    "Solve": 0.152,
    "Model": 0.152,
    "Unsat": 0.000,
    "CPU": 0.327
  },
  "Stats": {
    "Core": {
      "Choices": 6668,
      "Conflicts": 717,
      "Backtracks": 0,
      "Backjumps": 717,
      "Restarts": 6,
      "RestartAvg": 119.500,
      "RestartLast": 43
    },
    "More": {
      "CPU": 0.152,
      "Models": 1,
      "AvgModel": 55.000,
      "Splits": 0,
      "Problems": 1,
      "AvgGPLength": 0.000,
      "Lemma": {
        "Sum": 2560,
        "Deleted": 0,
        "Type": [
          {
            "Type": "Short",
            "Sum": 464,
            "Ratio": 18.125,
            "Binary": 181,
            "Ternary": 283
          },
          {
            "Type": "Conflict",
            "Sum": 717,
            "AvgLen": 8.637
          },
          {
            "Type": "Loop",
            "Sum": 1843,
            "AvgLen": 17.028
          },
          {
            "Type": "Other",
            "Sum": 0,
            "AvgLen": 0.000
          }
        ]
      }
    },
    "Jumps": {
      "Sum": 717,
      "Max": 106,
      "MaxExec": 106,
      "Avg": 8.948,
      "AvgExec": 8.948,
      "Levels": 6416,
      "LevelsExec": 6416,
      "Bounded": {
        "Sum": 0,
        "Max": 0,
        "Avg": 0.000,
        "Levels": 0
      }
    },
    "LP": {
      "Rules": {
        "Original": 168306,
        "Final": 168717,
        "Choice": {
          "Original": 2172,
          "Final": 2172
        },
        "Acyc": {
          "Original": 1144,
          "Final": 1111
        }
      },
      "Atoms": 49594,
      "Bodies": {
        "Original": 105677,
        "Final": 106121,
        "Count": {
          "Original": 444,
          "Final": 0
        }
      },
      "Tight": "no",
      "SCCs": 592,
      "NonHcfs": 0,
      "UfsNodes": 86564,
      "NonHcfGammas": 0,
      "Equivalences": {
        "Sum": 13912,
        "Atom": 3441,
        "Body": 600,
        "Other": 9871
      }
    },
    "Problem": {
      "Variables": 90367,
      "Eliminated": 0,
      "Frozen": 86276,
      "Constraints": {
        "Sum": 314497,
        "Binary": 228794,
        "Ternary": 68303
      },
      "AcycEdges": 1111
    }
  }
}
